# .github/workflows/create-branch-pr.yml
name: Create Branch and PR on Issue

on:
  issues:
    types: [opened]

jobs:
  create-branch-and-pr:
    # Run only when BOTH labels are present
    if: |
      contains(github.event.issue.labels.*.name, 'constraint') &&
      contains(github.event.issue.labels.*.name, 'exemption')

    runs-on: ubuntu-latest
    permissions:
      contents: write          # push new branch
      pull-requests: write     # open PR

    steps:
    #------------------------------------------------
    # 0. Checkout repo
    #------------------------------------------------
    - uses: actions/checkout@v4

    #------------------------------------------------
    # 1. Set up Python (3.11) + deps (PyYAML)
    #------------------------------------------------
    - uses: actions/setup-python@v5
      with:
        python-version: "3.11"

    - name: Install Python deps
      run: |
        pip install --quiet pyyaml

    #------------------------------------------------
    # 2. Create branch and write issue body to file
    #------------------------------------------------
    - name: Create branch & save issue body
      env:
        ISSUE_NUMBER: ${{ github.event.issue.number }}
        ISSUE_BODY:   ${{ github.event.issue.body }}
      run: |
        set -euo pipefail

        BRANCH="issue-${ISSUE_NUMBER}"
        git switch -c "$BRANCH"

        mkdir -p tmp
        printf '%s\n' "$ISSUE_BODY" > "tmp/body.md"

    #------------------------------------------------
    # 3. Generate YAML / TF from Python script
    #------------------------------------------------
    - name: Generate policy file
      env:
        ISSUE_NUMBER: ${{ github.event.issue.number }}
      run: |
        # ðŸ”µ adjust path/to/your/script if needed
        python tools/generate_policy.py tmp/body.md policies/

    #------------------------------------------------
    # 4. Commit & push branch
    #------------------------------------------------
    - name: Commit generated files
      env:
        ISSUE_NUMBER: ${{ github.event.issue.number }}
        BRANCH: issue-${{ github.event.issue.number }}
      run: |
        git config user.name  "github-actions[bot]"
        git config user.email "41898282+github-actions[bot]@users.noreply.github.com"

        # Add both the markdown and anything new inside policies/
        git add tmp/body.md policies/
        git commit -m "feat: auto-generated policy from issue #${ISSUE_NUMBER}" || echo "Nothing to commit"
        git push --set-upstream origin "$BRANCH"

    #------------------------------------------------
    # 5. Open Pull Request
    #------------------------------------------------
    - name: Open pull request
      uses: actions/github-script@v7
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        script: |
          const issue = context.issue.number;
          const branch = `issue-${issue}`;

          await github.rest.pulls.create({
            ...context.repo,
            title: `Issue #${issue} â€“ auto-generated policy`,
            head: branch,
            base: 'main',           // ðŸ”µ change if default branch â‰  main
            body: `Closes #${issue}\n\nPolicy generated by \`tools/generate_policy.py\`.`
          });
